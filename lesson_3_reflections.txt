When would you want to use a remote repository rather than keeping all your work local?
  When you want to share a project between users or between computers. Or for remote backup.
  
Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

	Doing a pull could potentially overwrite some local files that you have been working on but haven't committed yet.
	Also you may want to wait for particular set of commits on the remote to be completed before merging with your own.

Describe the differences between forks, clones, and branches. When would you use one instead of another?
	A branch is part of the project. It may contain any sort of changes. Use it for changes that are 'part of' the original project.
	A clone is a complete copy of a project in a new location with a new name. The link to the old project is broken. Use it
	when creating a new version of something - for example you may have a template for a website or DLL that you use over and over
	when creating new projects. 
	A fork is a way of creating a new project, based on another, on GitHub. Its a clone which includes a reference back to the original project.

What is the benefit of having a copy of the last known state of the remote stored locally?
	this allows you to view/edit/merge the remote at your leisure and ensures that you still have everything, even
	if you aren't currently using the remote version. Git status will be aware of the differences.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
	Collaborating without a version control system can be done by sending files back and forth or by using a common set of folders and lots of communication.

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
	Making your changes into a separate branch is useful when other people need to accept your changes before they become official. 
	An example is an open source project where many people might suggest changes but the maintainers may only accept some of them.
	Making the change directly in master would force everyone to get the update before it was blessed.
		