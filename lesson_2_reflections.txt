What happens when you initialize a repository? Why do you need to do it?

	It creates a .git directory and sets up whatever is necessary within it.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

	Items in the staging area are flagged for inclusion in the next commit, it's like purgatory.
	The files haven't been committed yet, though so can still be modified. It allows you to finish 
	with a file and move on to  a related edit before the commit.

How can you use the staging area to make sure you have one commit per logical
change?
	You can work on several files making changes on each and adding to the staging area. Then
	when a logical group of changes has been staged you can commit.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
	Using a branch for an experiment allows you to isolate the changes associated with 
	the experiment and roll back to the main code base on demand. By creating branches for
	release points, you can get back to that exact point to fix a bug.

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually


